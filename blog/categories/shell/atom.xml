<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Thema: Shell | Was ich so treibe...]]></title>
  <link href="http://uli-heller.github.com/blog/categories/shell/atom.xml" rel="self"/>
  <link href="http://uli-heller.github.com/"/>
  <updated>2014-03-24T07:23:21+01:00</updated>
  <id>http://uli-heller.github.com/</id>
  <author>
    <name><![CDATA[Uli Heller]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GREP - Zeilen aus Umgebungsvariable ignorieren]]></title>
    <link href="http://uli-heller.github.com/blog/2013/11/10/grep/"/>
    <updated>2013-11-10T09:00:00+01:00</updated>
    <id>http://uli-heller.github.com/blog/2013/11/10/grep</id>
    <content type="html"><![CDATA[<p>Ich habe ein Projekt &ldquo;geerbt&rdquo;, das zu einem großen Teil aus Shell-Skripts besteht.
In einem dieser Skripte wird die Ausgabe eines Kommandos in einer Umgebungsvariablen
&ldquo;gesammelt&rdquo; und ein Fehler ausgegeben, wenn die Umgebungsvariable ein Wort enthält.</p>

<p>Leider generiert besagtes Kommando seit neuestem zusätzliche Ausgaben auch wenn alles
OK ist, das Skript läuft dann auf einen Fehler.</p>

<p>Nun brauche ich eine Möglichkeit zum intelligenten Filtern des Inhaltes der Variablen!</p>

<!-- more -->


<h2>Entfernen eines Musters</h2>

<p>Mit GREP schaffe ich&rsquo;s recht einfach, alle Ausgaben, die mit &ldquo;Starten&rdquo; beginnen, zu entfernen:</p>

<pre><code># Funktion zum Ausfiltern aller Zeilen, die einem Muster entsprechen
filterOut () {
  grep -v "^Starten "
}

# Testdaten
AA="$(cat &lt;&lt;EOF
Starten von Replicate.sql
Replicate.sql running
Replicate.sql finished
EOF
)"

# Filterung durchführen
echo "${AA}"|filterOut
# Ausgaben:
#   Replicate.sql running
#   Replicate.sql finished
</code></pre>

<h2>Entfernen mehrerer Muster</h2>

<p>Leider gibt es kein einfaches Muster, um alle ungewünschten Ausgaben rauszuwerfen. Wir brauchen
mehrere Muster!</p>

<pre><code># Funktion zum Ausfiltern aller Zeilen, die einem von mehreren Mustern entsprechen
filterOut () {
  grep -v              \
    -e "^Starten "     \
    -e "sql finished$"
}

# Testdaten
AA="$(cat &lt;&lt;EOF
Starten von Replicate.sql
Replicate.sql running
Replicate.sql finished
EOF
)"

# Filterung durchführen
echo "${AA}"|filterOut
# Ausgaben:
#   Replicate.sql running
</code></pre>

<h2>AIX</h2>

<p>Das &ldquo;geerbte&rdquo; Projekt läuft unter AIX 6.1. Schön wär&rsquo;s, wenn obiges Konstrukt auch dort funktioniert.
Ein kurzer Quercheck zeigt: Ja, GREP verhält sich unter AIX genauso.</p>
]]></content>
  </entry>
  
</feed>
